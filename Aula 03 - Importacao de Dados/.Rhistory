# pacotes
library(tidymodels)
library(tidyverse)
library(xgboost)
library(DiagrammeR)
# carregando dados do exemplo feito a mao
y <- c(-20,-10,-7,8,20,7)
x <- c(30,10,35,20,25,21)
dados <- as.data.frame(cbind(y,x))
# especificando o modelo
modelo_xgb <- boost_tree(
mode = "regression",  # que tipo de arvore eh: regression ou classification
mtry = 1, # numero de variaveis em cada arvore
sample_size = 1, # percentual das linhas sorteadas por arvore
min_n = 1, #numero minimo que um no precisa ter para quebrar
tree_depth = 2, # profundidade da arvore
loss_reduction = 80, # gamma, conhecido como loss reduction
trees = 2, #numero de arvores
learn_rate = 0.3 # taxa de aprendizado
) %>%
set_engine("xgboost", lambda = 0) # aqui você adiona o valor da regularizacao lambda
# apos especificar, ajustar
ajustando_xgb <- fit(modelo_xgb, y ~ x, data = dados)
ajustando_xgb
# criando uma coluna predita e residuo
dados_pred_res <- dados %>%
mutate(
predicao = predict(ajustando_xgb, dados),
erro = y-predicao
)
#plotando as arvores criadas
xgb.plot.tree(model=ajustando_xgb$fit)
setwd("C:/Users/Pablo/Desktop/UFOP/Manipulação e Visualização de Dados/Aula 3 - Importacao de Dados")
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt")
str(base1)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE)
?read.table()
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
str(base1)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
head(base1)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
glimpse(base1)
?glimpse
??glimpse
library(dplyr)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
glimpse(base1)
library(dplyr)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
glimpse(base1)
library(dplyr)
base2 <- read.table("a3_texto_planilhas/tabela_brasileiro.txt", header = TRUE, sep = ";")
class(base2)
glimpse(base2)
library(dplyr)
base2 <- read.table("a3_texto_planilhas/tabela_brasileiro.txt", header = TRUE, sep = ";")
class(base2)
head(base2)
library(dplyr)
base2 <- read.table("a3_texto_planilhas/tabela_brasileiro.txt", header = TRUE, sep = ";", dec = ",", stringsAsFactors = TRUE)
class(base2)
head(base2)
library(dplyr)
base2 <- read.table("a3_texto_planilhas/tabela_brasileiro.txt", header = TRUE, sep = ";", dec = ",", stringsAsFactors = TRUE)
class(base2)
glimpse(base2)
library(dplyr)
base2 <- read.table("a3_texto_planilhas/tabela_brasileiro.txt", header = TRUE, sep = ";", dec = ",", stringsAsFactors = TRUE)
class(base2)
glimpse(base2)
library(dplyr)
base3 <- read.table("a3_texto_planilhas/Mens_Boston_Marathon_Winners.csv", header = TRUE, sep = ";", dec = ",", stringsAsFactors = TRUE)
class(base3)
glimpse(base3)
library(dplyr)
base3 <- read.table("a3_texto_planilhas/Mens_Boston_Marathon_Winners.csv", header = TRUE, sep = ",")
class(base3)
glimpse(base3)
library(dplyr)
base3 <- read.csv("a3_texto_planilhas/Mens_Boston_Marathon_Winners.csv")
class(base3)
glimpse(base3)
library(dplyr)
base3 <- read.csv("a3_texto_planilhas/Mens_Boston_Marathon_Winners.csv")
class(base3)
glimpse(base3)
min(base3$Year)
library(dplyr)
base3 <- read.csv("a3_texto_planilhas/Mens_Boston_Marathon_Winners.csv")
class(base3)
glimpse(base3)
max(base3$Year)
library(dplyr)
base3 <- read.csv("a3_texto_planilhas/Mens_Boston_Marathon_Winners.csv")
class(base3)
glimpse(base3)
max(base3$Year, na.rm = TRUE)
library(dplyr)
base3 <- read.csv("a3_texto_planilhas/Mens_Boston_Marathon_Winners.csv")
class(base3)
glimpse(base3)
min(base3$Year, na.rm = TRUE)
pacman::p_load(readxl)
install.packages(pacman)
library(dplyr)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
glimpse(base1)
install.packages("pacman")
library(dplyr)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
glimpse(base1)
install.packages("pacman")
pacman::p_load(tidyverse)
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
glimpse(base1)
install.packages("pacman")
pacman::p_load("tidyverse")
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
glimpse(base1)
install.packages("pacman")
pacman::p_load("tidyverse")
base1 <- read.table("a3_texto_planilhas/carros_venda_webmotors.txt", header = TRUE, sep = "\t")
class(base1)
glimpse(base1)
pacman::p_load(readxl)
base4 <- read.xlsx("pos_graduacao_ufop21.xlsx")
class(base4)
glimpse(base4)
pacman::p_load(readxl)
base4 <- read_xlsx("pos_graduacao_ufop21.xlsx")
pacman::p_load(readxl)
base4 <- read_xlsx("a3_texto_planilhas/pos_graduacao_ufop21.xlsx")
class(base4)
glimpse(base4)
pacman::p_load(readxl)
base4 <- read_xlsx("a3_texto_planilhas/pos_graduacao_ufop21.xlsx", sheet = 1)
class(base4)
glimpse(base4)
library(dplyr)
base5 <- read_spss("a3_texto_planilhas/SalesPerformance.sav")
class(base5)
glimpse(base5)
pacmann::p_load("haven")
pacman::p_load("haven")
base5 <- read_spss("a3_texto_planilhas/SalesPerformance.sav")
class(base5)
glimpse(base5)
pacman::p_load("haven")
base5 <- read_spss("a3_texto_planilhas/SalesPerformance.sav")
class(base5)
glimpse(base5)
str(base5)
pacman::p_load("pdftools")
base6 <- pdf_text("datasets/a3_texto_planilhas/3c_sisu_2024_ufop.pdf")
class(base6)
glimpse(base6)
pacman::p_load("pdftools")
base6 <- pdf_text("a3_texto_planilhas/3c_sisu_2024_ufop.pdf")
class(base6)
glimpse(base6)
pacman::p_load("pdftools")
base6 <- pdf_text("a3_texto_planilhas/3c_sisu_2024_ufop.pdf")
#Vamos verificar algumas características do documento:
glimpse(base6)
#Exibição da primeira página
base6[1]
base6[1] %>%
str_split(pattern = "\n")
tabela_sisu <- base6 %>%
.[1] %>% #Seleção da primeira página
str_split(pattern = "\n") %>% #Divisão do texto pelo caractere \n
unlist %>% #Conversão de lista em vetor
.[44:59] %>% #Seleção das linhas 44 a 59
str_split("\\s{2}") %>% #separação de colunas por espaço duplo
lapply(function(x)x[x!=""]) %>% #Remoção de elementos vazios
unlist %>% #Conversão de lista em vetor
str_trim #Remoção de espaços vazios no início e fim dos textos
#Unindo as posições 33 e 37, que contem os mesmos dados
tabela_sisu[37] <- paste(tabela_sisu[33], "-", tabela_sisu[37])
tabela_sisu <- tabela_sisu[-33]
tabela_sisu
tabela_sisu %>% #Converte os dados em uma matriz
matrix(ncol = 4, byrow = T) %>% #Converte a matriz em dataframe
as.data.frame.matrix() %>% #Atribuição dos nomes de colunas
rename("curso" = "V1", "cpf" = "V2",
"cota" = "V3", "situacao" = "V4") #Renomear as colunas
install.packages('httr')
1 + 1
library("pacman")
pacman::p_load("httr")
banks <- "https://brasilapi.com.br/api/banks/v1"
api_banks <- GET(url = banks)
api_banks
library("pacman")
pacman::p_load("httr", "tidyverse")
banks <- "https://brasilapi.com.br/api/banks/v1"
api_banks <- GET(url = banks)
bancos <- content(api_banks, "text") %>% fromJSON()
library("pacman")
pacman::p_load("httr", "tidyverse", "jsonlite")
banks <- "https://brasilapi.com.br/api/banks/v1"
api_banks <- GET(url = banks)
bancos <- content(api_banks, "text") %>% fromJSON()
library("pacman")
pacman::p_load("httr", "tidyverse", "jsonlite")
banks <- "https://brasilapi.com.br/api/banks/v1"
api_banks <- GET(url = banks)
bancos <- content(api_banks, "text") %>% fromJSON()
glimpse(bancos)
library("pacman")
pacman::p_load("httr", "tidyverse", "jsonlite")
banks <- "https://brasilapi.com.br/api/banks/v1"
api_banks <- GET(url = banks)
bancos <- content(api_banks, "text") %>% fromJSON()
class(bancos)
library("pacman")
pacman::p_load("httr", "tidyverse", "jsonlite")
banks <- "https://brasilapi.com.br/api/banks/v1"
api_banks <- GET(url = banks)
bancos <- content(api_banks, "text") %>% fromJSON()
head(bancos)
library("pacman")
pacman::p_load("httr", "tidyverse", "jsonlite")
cambio <- "https://brasilapi.com.br/api/cambio/v1/moedas"
api_cambio <- GET(url = banks)
moedas <- content(api_cambio, "text") %>% fromJSON()
head(moedas)
library("pacman")
pacman::p_load("httr", "tidyverse", "jsonlite")
cambio <- "https://brasilapi.com.br/api/cambio/v1/moedas"
api_cambio <- GET(url = banks)
moedas <- content(api_cambio, "text") %>% fromJSON()
head(moedas)
library("pacman")
pacman::p_load("httr", "tidyverse", "jsonlite")
cambio <- "https://brasilapi.com.br/api/cambio/v1/moedas"
api_cambio <- GET(url = cambio)
moedas <- content(api_cambio, "text") %>% fromJSON()
head(moedas)
library("pacman")
pacman::p_load("httr", "tidyverse", "jsonlite")
cambio <- "https://brasilapi.com.br/api/cambio/v1/moedas"
api_cambio <- GET(url = cambio)
moedas <- content(api_cambio, "text") %>% fromJSON()
moedas
pacman::p_load("httr", "tidyverse", "jsonlite")
feriados <- "https://brasilapi.com.br/api/feriados/v1/{2025}"
api_feriados <- GET(url = feriados)
resultado_feriados <- content(api_banks, "text") %>% fromJSON()
class(resultado_feriados)
pacman::p_load("httr", "tidyverse", "jsonlite")
feriados <- "https://brasilapi.com.br/api/feriados/v1/{2025}"
api_feriados <- GET(url = feriados)
resultado_feriados <- content(api_banks, "text") %>% fromJSON()
(resultado_feriados)
pacman::p_load("httr", "tidyverse", "jsonlite")
feriados <- "https://brasilapi.com.br/api/feriados/v1/{2025}"
api_feriados <- GET(url = feriados)
resultado_feriados <- content(api_feriados, "text") %>% fromJSON()
(resultado_feriados)
pacman::p_load("httr", "tidyverse", "jsonlite")
feriados <- "https://brasilapi.com.br/api/feriados/v1/2025"
api_feriados <- GET(url = feriados)
resultado_feriados <- content(api_feriados, "text") %>% fromJSON()
(resultado_feriados)
pacman::p_load("httr", "tidyverse", "jsonlite")
feriados <- "https://brasilapi.com.br/api/feriados/v1/2025"
api_feriados <- GET(url = feriados)
resultado_feriados <- content(api_feriados, "text") %>% fromJSON()
head(resultado_feriados)
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = c("firefox"), chromever = NULL)
rmdr <- driver[['client']]
rmdr$navigate(url)
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = c("chrome"), chromever = NULL)
rmdr <- driver[['client']]
rmdr$navigate(url)
system("java -version")
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = c("chrome"), chromever = latest)
rmdr <- driver[['client']]
rmdr$navigate(url)
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = c("chrome"), chromever = latest)
rmdr <- driver[['client']]
rmdr$navigate(url)
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = c("chrome"), chromever = "latest")
rmdr <- driver[['client']]
rmdr$navigate(url)
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = "firefox", port = 4567L, chromever = NULL)
rmdr <- driver[['client']]
rmdr$navigate(url)
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = "brave", port = 4567L, chromever = NULL)
binman::rm_platform("phantomjs")
install.packages("RSelenium")
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = "chrome", chromever = NULL)
rmdr <- driver[['client']]
rmdr$navigate(url)
binman::rm_platform("phantomjs")
# Verificar, Instalar e carregar os pacotes necessários
if (!requireNamespace("RSelenium", quietly = TRUE)) install.packages("RSelenium")
if (!requireNamespace("rvest", quietly = TRUE)) install.packages("rvest")
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
# pacotes necessários
library(RSelenium)
library(rvest)
library(dplyr)
library(stringr)
library(rmarkdown)
# URL do site
url <- "https://seminovos.com.br/carro/cidade[]-3449"
#Criar o driver e direciona a localização do firefox
driver <- rsDriver(browser = c("firefox"), chromever = NULL)
pacman::p_load("RSelenium")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = "chrome", chromever = NULL)
rmdr <- driver[['client']]
rmdr$navigate(url)
pacman::p_load("rvest")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
carros <- read_html(url)
carros
pacman::p_load("rvest")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
pagina <- read_html(
GET(url, add_headers("User-Agent" = "Mozilla/5.0"))
)
pagina
pacman::p_load("rvest", "httr")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
pagina <- read_html(
GET(url, add_headers("User-Agent" = "Mozilla/5.0"))
)
pacman::p_load("rvest", "httr")
url <- "https://seminovos.com.br/carro/cidade[]-3449"
driver <- rsDriver(browser = "firefox", chromever = NULL)
driver <- rsDriver(browser = c("firefox"), chromever = NULL)
