df_join = df_join[weather_dt, on = .(
origin = origin, time_hour = time_hour, month = month,
day = day, hour = hour)]
df_join
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
df_join = df_situacao[month == 1 & year == 2013]
df_join = df_join[planes_dt, on = .(tailnum = tailnum)]
#df_join = df_join[weather_dt, on = .(
#origin = origin, time_hour = time_hour, month = month,
#day = day, hour = hour)]
df_join
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
df_join = df_situacao[month == 1 & year == 2013]
#df_join = df_join[planes_dt, on = .(tailnum = tailnum)]
#df_join = df_join[weather_dt, on = .(
#origin = origin, time_hour = time_hour, month = month,
#day = day, hour = hour)]
df_join
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = df_situacao[month == 1 & year == 2013]
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
pacman::p_load("nycflights13", "tidyverse", "data.table")
flights_dt = as.data.table(flights)
dt_situacao = flights_dt[, `:=` (
saída = case_when(
dep_delay < 0 ~ "Adiantado",
dep_delay == 0 ~ "No horário",
dep_delay > 0 ~ "Atrasado"
),
chegada = case_when(
arr_delay < 0 ~ "Adiantado",
arr_delay == 0 ~ "No horário",
arr_delay > 0 ~ "Atrasado"))][]
dt_situacao
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .("tailnum")]
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .(tailnum)]
dt_join = weather_dt[dt_join, on = .("origin", "year", "month", "day", "hour")]
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .(tailnum)]
dt_join = weather_dt[dt_join, on = .(origin, year, month, day, hour)]
dt_join
pacman::p_load("nycflights13", "tidyverse", "data.table")
flights_dt = as.data.table(flights)
dt_situacao = flights_dt[, `:=` (
saída = case_when(
dep_delay < 0 ~ "Adiantado",
dep_delay == 0 ~ "No horário",
dep_delay > 0 ~ "Atrasado"
),
chegada = case_when(
arr_delay < 0 ~ "Adiantado",
arr_delay == 0 ~ "No horário",
arr_delay > 0 ~ "Atrasado"))][]
dt_situacao
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = dt_situacao[month == 1 & year == 2013]
(dt_join = dt_situacao[month == 1 & year == 2013])
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .(tailnum)]
dt_join = weather_dt[dt_join, on = .(origin, year, month, day, hour)]
dt_final_join <- dt_join[, .(month, day, flight, saida, chegada, temp, manufacturer, model)]
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .(tailnum)]
dt_join = weather_dt[dt_join, on = .(origin, year, month, day, hour)]
dt_final_join <- dt_join[, .(month, day, flight, saída, chegada, temp, manufacturer, model)]
dt_final_join
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .(tailnum)]
dt_join = weather_dt[dt_join, on = .(origin, year, month, day, hour)]
dt_final_join <- dt_join[, .(month, day, flight, saída, chegada, temp, manufacturer, model)]
dt_final_join
dt_join
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .(tailnum)]
dt_join = weather_dt[dt_join, on = .(origin, time_hour, month, day, hour)]
dt_final_join <- dt_join[, .(month, day, flight, saída, chegada, temp, manufacturer, model)]
dt_final_join
dt_join[temp = (temp - 32) / 1.8]
dt_join
dt_join[temp = (temp - 32) / 1.8]
dt_join[temp := (temp - 32) / 1.8]
dt_join[, temp := (temp - 32) / 1.8]
dt_join
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .(tailnum)]
dt_join = weather_dt[dt_join, on = .(origin, time_hour, month, day, hour)]
dt_final_join <- dt_join[, .(month, day, flight, saída, chegada, temp, manufacturer, model)]
dt_final_join
dt_join[, `:=` (
temp = (temp - 32) / 1.8,
situacao_temp = case_when(
temp < 0 ~ "Negativo",
temp >= 0 ~ "Positivo"
))]
dt_join
dt_join[situacao_temp == "Negativo"]
dt_join[situacao_temp == "Positivo"]
pacman::p_load("nycflights13", "tidyverse", "data.table")
flights_dt = as.data.table(flights)
dt_situacao = flights_dt[, `:=` (
saída = case_when(
dep_delay < 0 ~ "Adiantado",
dep_delay == 0 ~ "No horário",
dep_delay > 0 ~ "Atrasado"
),
chegada = case_when(
arr_delay < 0 ~ "Adiantado",
arr_delay == 0 ~ "No horário",
arr_delay > 0 ~ "Atrasado"))][]
dt_situacao
planes_dt = as.data.table(planes)
weather_dt = as.data.table(weather)
dt_join = dt_situacao[month == 1 & year == 2013]
dt_join = planes_dt[dt_join, on = .(tailnum)]
dt_join = weather_dt[dt_join, on = .(origin, time_hour, month, day, hour)]
dt_final_join <- dt_join[, .(month, day, flight, saída, chegada, temp, manufacturer, model)]
dt_final_join
dt_join
dt_full = planes_dt[dt_situacao, on = .(tailnum)]
dt_full = weather_dt[dt_full, on = .(origin, time_hour, month, day, hour)]
dt_full[, `:=` (
temp = (temp - 32) / 1.8,
situacao_temp = case_when(
temp < 0 ~ "Negativo",
temp >= 0 ~ "Positivo"
))]
dt_join[situacao_temp == "Positivo"]
dt_full = planes_dt[dt_situacao, on = .(tailnum)]
dt_full = weather_dt[dt_full, on = .(origin, time_hour, month, day, hour)]
dt_full[, `:=` (
temp = (temp - 32) / 1.8,
situacao_temp = case_when(
temp < 0 ~ "Negativo",
temp >= 0 ~ "Positivo"
))]
dt_full[situacao_temp == "Positivo"]
dt_full = planes_dt[dt_situacao, on = .(tailnum)]
dt_full = weather_dt[dt_full, on = .(origin, time_hour, month, day, hour)]
dt_full[, `:=` (
temp = (temp - 32) / 1.8,
situacao_temp = case_when(
temp < 0 ~ "Negativo",
temp >= 0 ~ "Positivo"
))]
dt_full[situacao_temp == "Negativo"]
dt_full
dt_full = planes_dt[dt_situacao, on = .(tailnum)]
dt_full = weather_dt[dt_full, on = .(origin, time_hour, month, day, hour)]
dt_full[, situacao_temp := (case_when
((temp - 32) / 1.8 < 0 ~ "Negativo",
(temp - 32) / 1.8 >= 0 ~ "Positivo"
))]
dt_full[situacao_temp == "Negativo"]
dt_full = planes_dt[dt_situacao, on = .(tailnum)]
dt_full = weather_dt[dt_full, on = .(origin, time_hour, month, day, hour)]
dt_full[, situacao_temp := (case_when
((temp - 32) / 1.8 < 0 ~ "Negativo",
(temp - 32) / 1.8 >= 0 ~ "Positivo"
))]
dt_full[, .(temp, situacao_temp)]
atrasos = df_join_completo %>%
filter(!is.na(manufacturer), !is.na(chegada)) %>%
group_by(manufacturer, chegada) %>%
summarise(total_voos = n(), .groups = 'drop') %>%
group_by(manufacturer) %>%
mutate(percentual = total_voos/sum(total_voos) * 100) %>%
ungroup() %>%
relocate(percentual, .after = chegada) %>%
arrange(manufacturer, desc(percentual))
atrasos_dt = dt_full[!is.na(manufacturer) & !is.na(chegada),
.(total_voos) = .N,
atrasos_dt = dt_full[!is.na(manufacturer) & !is.na(chegada),
.(total_voos = .N),
by = .(manufacturer, chegada)]
atrasos_dt[, percentual := total_voos / sum(total_voos) * 100,
by = manufacturer]
atrasos_dt
atrasos_dt = dt_full[!is.na(manufacturer) & !is.na(chegada),
.(total_voos = .N),
by = .(manufacturer, chegada)]
atrasos_dt[, percentual := total_voos / sum(total_voos) * 100,
by = manufacturer]
setcolorder(atrasos_dt, c("manufacturer", "chegada", "percentual", "total_voos"))
setorder(atrasos_dt, manufacturer, -percentual)
atrasos_dt
dt_full
dt_full[, precipitacao := fcase(
precip > 0, "Com precipitacao",
precip == 0, "Sem precipitacao"
)]
precipitacao_chegada = dt_full[!is.na(precip) & !is.na(chegada),
.(total_voos = .N),
by = .(precipitacao, chegada)][
, percentual_precip :=
total_voos/sum(total_voos*100),
by = .(precipitacao)]
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(precipitacao_chegada, aes(x = chegada, y = percentual_precip, fill = chegada)) +
geom_col(show.legend = FALSE) +  # Cria as barras
geom_text(aes(label = paste0(round(percentual_precip, 1), "%")), vjust = -0.5) + # Adiciona os rótulos de %
facet_wrap(~ precipitacao) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Precipitação na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 75) # Ajusta o limite do eixo Y para melhor visualização
precipitacao_chegada
(precipitacao_chegada)
dt_full[, precipitacao := fcase(
precip > 0, "Com precipitacao",
precip == 0, "Sem precipitacao"
)]
precipitacao_chegada = dt_full[!is.na(precip) & !is.na(chegada),
.(total_voos = .N),
by = .(precipitacao, chegada)][
, percentual_precip :=
total_voos/sum(total_voos*100),
by = .(precipitacao)]
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(precipitacao_chegada, aes(x = chegada, y = percentual_precip, fill = chegada)) +
geom_col(show.legend = FALSE) +  # Cria as barras
geom_text(aes(label = paste0(round(percentual_precip, 1), "%")), vjust = -0.5) + # Adiciona os rótulos de %
facet_wrap(~ precipitacao) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Precipitação na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 75) # Ajusta o limite do eixo Y para melhor visualização
precipitacao_chegada
print(precipitacao_chegada)
pacman::p_load("nycflights13", "tidyverse")
atrasados <- function(x){
case_when(
x < 0 ~ "Adiantado",
x == 0 ~ "No horário",
x > 0 ~ "Atrasado"
)
}
df_situacao = flights %>%
mutate(across(
.cols = c(dep_delay, arr_delay),
.fn = atrasados,
.names = "{.col}_novo")) %>%
rename(saída = dep_delay_novo, chegada = arr_delay_novo) %>%
relocate(c(saída, chegada))
df_situacao
df_join = df_situacao %>%
filter((year == 2013) & (month == 1)) %>%
left_join(planes, by = "tailnum") %>%
left_join(weather, by = c("origin", "time_hour", "month", "day", "hour")) %>%
select("month", "day", "flight", "saída", "chegada", "temp", "manufacturer", "model", "precip")
df_join
df_join_completo = df_situacao %>%
left_join(planes, by = "tailnum") %>%
left_join(weather, by = c("origin", "time_hour", "month", "day", "hour")) %>%
mutate(temp = (temp - 32) / 1.8) %>%
mutate(situacao_temp = case_when(
temp < 0 ~ "Negativo",
temp >= 0 ~ "Positivo"
)
) %>%
relocate(situacao_temp, .after = temp)
df_join_completo
atrasos = df_join_completo %>%
filter(!is.na(manufacturer), !is.na(chegada)) %>%
group_by(manufacturer, chegada) %>%
summarise(total_voos = n(), .groups = 'drop') %>%
group_by(manufacturer) %>%
mutate(percentual = total_voos/sum(total_voos) * 100) %>%
ungroup() %>%
relocate(percentual, .after = chegada) %>%
arrange(manufacturer, desc(percentual))
atrasos
precipitacao_chegada = df_situacao %>%
left_join(planes, by = "tailnum") %>%
left_join(weather, by = c("origin", "time_hour", "month", "day", "hour")) %>%
filter(!is.na(precip), !is.na(chegada)) %>%
mutate(precipitacao = ifelse(precip > 0, "Com precipitacao", "Sem precipitacao")) %>%
group_by(precipitacao, chegada) %>%
summarise(total_voos = n(), .groups = 'drop') %>%
group_by(precipitacao) %>%
mutate(percentual_precip = total_voos/sum(total_voos) * 100) %>%
relocate(chegada) %>%
arrange(chegada)
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(precipitacao_chegada, aes(x = chegada, y = percentual_precip, fill = chegada)) +
geom_col(show.legend = FALSE) +  # Cria as barras
geom_text(aes(label = paste0(round(percentual_precip, 1), "%")), vjust = -0.5) + # Adiciona os rótulos de %
facet_wrap(~ precipitacao) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Precipitação na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 75) # Ajusta o limite do eixo Y para melhor visualização
temp_chegada = df_join_completo %>%
left_join(planes, by = "tailnum") %>%
left_join(weather, by = c("origin", "time_hour", "month", "day", "hour")) %>%
filter(!is.na(situacao_temp), !is.na(chegada)) %>%
group_by(situacao_temp, chegada) %>%
summarise(total_voos = n(), .groups = 'drop') %>%
group_by(situacao_temp) %>%
mutate(percentual_temp = total_voos/sum(total_voos) * 100) %>%
relocate(chegada) %>%
arrange(chegada)
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(temp_chegada, aes(x = chegada, y = percentual_temp, fill = chegada)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste0(round(percentual_temp, 1), "%")), vjust = -0.5) +
facet_wrap(~ situacao_temp) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Temperatura na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 70)
dt_full[, precipitacao := fcase(
precip > 0, "Com precipitacao",
precip == 0, "Sem precipitacao"
)]
precipitacao_chegada = dt_full[!is.na(precip) & !is.na(chegada),
.(total_voos = .N),
by = .(precipitacao, chegada)][
, percentual_precip :=
total_voos/sum(total_voos)*100,
by = .(precipitacao)]
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(precipitacao_chegada, aes(x = chegada, y = percentual_precip, fill = chegada)) +
geom_col(show.legend = FALSE) +  # Cria as barras
geom_text(aes(label = paste0(round(percentual_precip, 1), "%")), vjust = -0.5) + # Adiciona os rótulos de %
facet_wrap(~ precipitacao) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Precipitação na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 75) # Ajusta o limite do eixo Y para melhor visualização
print(precipitacao_chegada)
temp_chegada = dt_full[!is.na(tmep) & !is.na(chegada),
.(total_voos = .N),
by = .(temp, chegada)][
, percentual_temp :=
total_voos/sum(total_voos)*100,
by = .(temp)]
temp_chegada = dt_full[!is.na(temp) & !is.na(chegada),
.(total_voos = .N),
by = .(temp, chegada)][
, percentual_temp :=
total_voos/sum(total_voos)*100,
by = .(temp)]
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(temp_chegada, aes(x = chegada, y = percentual_temp, fill = chegada)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste0(round(percentual_temp, 1), "%")), vjust = -0.5) +
facet_wrap(~ situacao_temp) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Temperatura na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 70)
dt_full
temp_chegada = dt_full[!is.na(temp) & !is.na(chegada),
.(total_voos = .N),
by = .(temp, chegada)][
, percentual_temp :=
total_voos/sum(total_voos)*100,
by = .(temp)]
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(temp_chegada, aes(x = chegada, y = percentual_temp, fill = chegada)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste0(round(percentual_temp, 1), "%")), vjust = -0.5) +
facet_wrap(~ situacao_temp) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Temperatura na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 70)
temp_chegada
(temp_chegada)
(temp_chegada) = dt_full[!is.na(situacao_temp) & !is.na(chegada),
.(total_voos = .N),
by = .(situacao_temp, chegada)][
, percentual_temp :=
total_voos/sum(total_voos)*100,
by = .(situacao_temp)]
(temp_chegada) = dt_full[!is.na(temp) & !is.na(chegada),
.(total_voos = .N),
by = .(temp, chegada)][
, percentual_temp :=
total_voos/sum(total_voos)*100,
by = .(temp)]
temp_chegada = dt_full[!is.na(temp) & !is.na(chegada),
.(total_voos = .N),
by = .(temp, chegada)][
, percentual_temp :=
total_voos/sum(total_voos)*100,
by = .(temp)]
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(temp_chegada, aes(x = chegada, y = percentual_temp, fill = chegada)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste0(round(percentual_temp, 1), "%")), vjust = -0.5) +
facet_wrap(~ situacao_temp) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Temperatura na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 70)
temp_chegada = dt_full[!is.na(siuacao_temp) & !is.na(chegada),
.(total_voos = .N),
by = .(siuacao_temp, chegada)][
, percentual_temp :=
total_voos/sum(total_voos)*100,
by = .(siuacao_temp)]
temp_chegada = dt_full[!is.na(situacao_temp) & !is.na(chegada),
.(total_voos = .N),
by = .(situacao_temp, chegada)][
, percentual_temp :=
total_voos/sum(total_voos)*100,
by = .(situacao_temp)]
cores_chegada <- c(
"Atrasado"   = "red",
"Adiantado"  = "green",
"No horário" = "blue"
)
ggplot(temp_chegada, aes(x = chegada, y = percentual_temp, fill = chegada)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste0(round(percentual_temp, 1), "%")), vjust = -0.5) +
facet_wrap(~ situacao_temp) +
scale_fill_manual(values = cores_chegada) +
labs(
title = "Impacto da Temperatura na Pontualidade dos Voos",
x = "Situação da Chegada",
y = "Percentual de Voos (%)"
) +
theme_minimal() +
ylim(0, 70)
