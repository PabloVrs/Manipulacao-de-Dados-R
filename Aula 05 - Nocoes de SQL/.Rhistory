library(pacman)
pacman::p_load(DBI, RSQLite)
db <- dbConnect(RSQLite::SQLite(),
dbname = "a5_nocoes_sql/AdventureWorksLT.db")
dbListTables(db)
dbGetQuery(db, "SELECT * FROM Address LIMIT 10")
dbGetQuery(db, "SELECT * FROM BuildVersion LIMIT 10")
dbGetQuery(db, "SELECT * FROM Customer LIMIT 10")
dbGetQuery(db, "SELECT * FROM CustomerAddress LIMIT 10")
dbGetQuery(db, "SELECT * FROM CustomerAddress LIMIT 10")
dbGetQuery(db, "SELECT * FROM Product LIMIT 10")
dbGetQuery(db, "SELECT * FROM ProductCategory LIMIT 10")
dbGetQuery(db, "SELECT * FROM ProductDescription LIMIT 10")
dbGetQuery(db, "SELECT * FROM ProductModel LIMIT 10")
dbGetQuery(db, "SELECT * FROM ProductModelProductDescription LIMIT 10")
dbGetQuery(db, "SELECT * FROM SalesOrderDetail LIMIT 10")
dbGetQuery(db, "SELECT * FROM SalesOrderHeader LIMIT 10")
dbGetQuery(db, "SELECT * FROM sqlite_sequence LIMIT 10")
dbGetQuery(db, "SELECT *
FROM Customer
WHERE FirstName LIKE 'A%'")
dbGetQuery(db, "SELECT *
FROM Product
WHERE StandardCost < 1000")
dbGetQuery(db, "SELECT Name, StandardCost, ListPrice, (ListPrice -
StandardCost) AS Lucro,
ROUND(((ListPrice - StandardCost) / ListPrice) * 100, 2) AS MargemLucro
FROM Product")
dbGetQuery(db, "SELECT Color, COUNT(*) AS Contagem
FROM Product
GROUP BY Color")
dbGetQuery(db, "SELECT StateProvince, COUNT(*) AS Frequencia
FROM Address
GROUP BY StateProvince")
dbGetQuery(db, "SELECT StateProvince, COUNT(*) AS Frequencia
FROM Address
GROUP BY StateProvince")
dbGetQuery(db, "SELECT *
FROM Product JOIN ProductCategory
ON Product.ProductCategoryID = ProductCategory.ProductCategoryID")
dbGetQuery(db, "SELECT *
FROM Customer JOIN CustomerAddress
ON Product.CustomerID = CustomerAddress.CustomerID")
dbGetQuery(db, "SELECT *
FROM Customer JOIN CustomerAddress
ON Customer.CustomerID = CustomerAddress.CustomerID")
dbGetQuery(db, "SELECT ProductID, Name, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY ProductID
ORDER BY Quantidade DESC
LIMIT 50")
dbGetQuery(db, "SELECT ProductID, Name, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY Product.ProductID
ORDER BY Quantidade ASC
LIMIT 50")
dbGetQuery(db, "SELECT Product.ProductID, Product.Name, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY Product.ProductID
ORDER BY Quantidade ASC
LIMIT 50")
dbGetQuery(db, "SELECT Product.ProductID, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY Product.ProductID
ORDER BY Quantidade ASC
LIMIT 50")
dbGetQuery(db, "SELECT p.Name as Produto,
vendas.Quantidade,
p.Color as Cor,
p.ListPrice AS Preco_Original,
ROUND(p.ListPrice * 0.8, 2) AS Preco_Promocional
FROM
(SELECT Product.ProductID, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY Product.ProductID
ORDER BY Quantidade ASC
LIMIT 50) AS vendas
JOIN Product p ON vendas.ProductID = p.ProductID")
dbGetQuery(db, "SELECT p.Name as Produto,
vendas.Quantidade,
p.Color as Cor,
p.ListPrice AS Preco_Original,
(p.ListPrice * 0.8) AS Preco_Promocional
FROM
(SELECT Product.ProductID, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY Product.ProductID
ORDER BY Quantidade ASC
LIMIT 50) AS vendas
JOIN Product p ON vendas.ProductID = p.ProductID")
dbGetQuery(db, "SELECT p.Name as Produto,
vendas.Quantidade,
p.Color as Cor,
p.ListPrice AS Preco_Original,
ROUND(p.ListPrice * 0.8, 2) AS Preco_Promocional
FROM
(SELECT Product.ProductID, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY Product.ProductID
ORDER BY Quantidade ASC
LIMIT 50) AS vendas
JOIN Product p ON vendas.ProductID = p.ProductID")
dbGetQuery(db, "SELECT p.Nome as Produto,
COUNT(*) AS Quantidade,
p.ListPrice AS Preço_Unitario,
(Quantidade * vendas.LineTotal) AS Valor_Total
FROM SalesOrderDetail vendas JOIN Product p
ON vendas.ProductID = p.ProductID
GROUP BY p.ProductID
ORDER BY Valor_Total DESC
")
dbGetQuery(db, "SELECT p.Name as Produto,
COUNT(*) AS Quantidade,
p.ListPrice AS Preço_Unitario,
(Quantidade * vendas.LineTotal) AS Valor_Total
FROM SalesOrderDetail vendas JOIN Product p
ON vendas.ProductID = p.ProductID
GROUP BY p.ProductID
ORDER BY Valor_Total DESC
")
dbGetQuery(db, "SELECT p.Name as Produto,
SUM(vendas.OrderQty) AS Quantidade,
p.ListPrice AS Preço_Unitario,
ROUND(SUM(vendas.LineTotal), 2) AS Valor_Total
FROM SalesOrderDetail vendas JOIN Product p
ON vendas.ProductID = p.ProductID
GROUP BY p.ProductID, p.Name, p.ListPrice
ORDER BY Valor_Total DESC
")
library(pacman)
pacman::p_load(DBI, RSQLite)
db <- dbConnect(RSQLite::SQLite(),
dbname = "a5_nocoes_sql/AdventureWorksLT.db")
dbListTables(db)
dbGetQuery(db, "SELECT * FROM Address LIMIT 10")
dbGetQuery(db, "SELECT * FROM BuildVersion LIMIT 10")
dbGetQuery(db, "SELECT * FROM Customer LIMIT 10")
dbGetQuery(db, "SELECT * FROM CustomerAddress LIMIT 10")
dbGetQuery(db, "SELECT * FROM CustomerAddress LIMIT 10")
dbGetQuery(db, "SELECT * FROM Product LIMIT 10")
dbGetQuery(db, "SELECT * FROM ProductCategory LIMIT 10")
dbGetQuery(db, "SELECT * FROM ProductDescription LIMIT 10")
dbGetQuery(db, "SELECT * FROM ProductModel LIMIT 10")
dbGetQuery(db, "SELECT * FROM ProductModelProductDescription LIMIT 10")
dbGetQuery(db, "SELECT * FROM SalesOrderDetail LIMIT 10")
dbGetQuery(db, "SELECT * FROM SalesOrderHeader LIMIT 10")
dbGetQuery(db, "SELECT * FROM sqlite_sequence LIMIT 10")
dbGetQuery(db, "SELECT *
FROM Customer
WHERE FirstName LIKE 'A%'")
dbGetQuery(db, "SELECT *
FROM Product
WHERE StandardCost < 1000")
dbGetQuery(db, "SELECT Name, StandardCost, ListPrice, (ListPrice -
StandardCost) AS Lucro,
ROUND(((ListPrice - StandardCost) / ListPrice) * 100, 2) AS MargemLucro
FROM Product")
dbGetQuery(db, "SELECT Color, COUNT(*) AS Contagem
FROM Product
GROUP BY Color")
dbGetQuery(db, "SELECT StateProvince, COUNT(*) AS Frequencia
FROM Address
GROUP BY StateProvince")
dbGetQuery(db, "SELECT *
FROM Product JOIN ProductCategory
ON Product.ProductCategoryID = ProductCategory.ProductCategoryID")
dbGetQuery(db, "SELECT *
FROM Customer JOIN CustomerAddress
ON Customer.CustomerID = CustomerAddress.CustomerID")
dbGetQuery(db, "SELECT Product.ProductID, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY Product.ProductID
ORDER BY Quantidade ASC
LIMIT 50")
dbGetQuery(db, "SELECT p.Name as Produto,
vendas.Quantidade,
p.Color as Cor,
p.ListPrice AS Preco_Original,
ROUND(p.ListPrice * 0.8, 2) AS Preco_Promocional
FROM
(SELECT Product.ProductID, COUNT(*) AS Quantidade
FROM Product JOIN SalesOrderDetail
ON Product.ProductID = SalesOrderDetail.ProductID
GROUP BY Product.ProductID
ORDER BY Quantidade ASC
LIMIT 50) AS vendas
JOIN Product p
ON vendas.ProductID = p.ProductID")
dbGetQuery(db, "SELECT p.Name as Produto,
SUM(vendas.OrderQty) AS Quantidade,
p.ListPrice AS Preço_Unitario,
ROUND(SUM(vendas.LineTotal), 2) AS Valor_Total
FROM SalesOrderDetail vendas JOIN Product p
ON vendas.ProductID = p.ProductID
GROUP BY p.ProductID, p.Name, p.ListPrice
ORDER BY Valor_Total DESC")
